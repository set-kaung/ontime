// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: ads.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgconn"
)

const getAdsWatched = `-- name: GetAdsWatched :one
select count(id) from ads_watching_history
WHERE user_id = $1 AND date_time > (NOW() - INTERVAL '24 hour')
`

func (q *Queries) GetAdsWatched(ctx context.Context, userID string) (int64, error) {
	row := q.db.QueryRow(ctx, getAdsWatched, userID)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const insertAdsHistory = `-- name: InsertAdsHistory :execresult
INSERT INTO ads_watching_history (user_id,date_time)
VALUES ($1,NOW())
`

func (q *Queries) InsertAdsHistory(ctx context.Context, userID string) (pgconn.CommandTag, error) {
	return q.db.Exec(ctx, insertAdsHistory, userID)
}
